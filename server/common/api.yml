swagger: "2.0"
info:
  version: 1.0.0
  title: wayfarer
  description: WayFarer is a public bus transportation booking service.
basePath: /api/v1
tags:
  - name: Authentication
    description: User authentication endpoints
  - name: Trips
    description: Trips endpoints
consumes:
  - application/json
produces:
  - application/json

definitions:
  UserRegisterBody:
    type: object
    title: register
    required:
      - email
      - password
      - first_name
      - last_name
    properties:
      email:
        type: string
        format: email
        example: user1@site.com
      password:
        type: string
        format: password
        example: password
      first_name:
        type: string
        example: fuser1
      last_name:
        type: string
        example: luser1

  UserLoginBody:
    type: object
    title: login
    properties:
      email:
        type: string
        format: email
        example: user1@site.com
      password:
        type: string
        format: password
        example: password

  TripBody:
    type: object
    title: trip
    required:
      - seating_capacity
      - bus_license_number
      - origin
      - destination
      - trip_date
      - fare
    properties:
      seating_capacity:
        type: integer
        format: int32
        example: 40
      bus_license_number:
        type: string
        example: 111
      origin:
        type: string
        example: A
      destination:
        type: string
        example: B
      trip_date:
        type: string
        format: date
        example: 2019-07-18T00:00:00.000Z
      fare:
        type: number
        example: 1

  BookingBody:
    type: object
    title: booking
    required:
      - trip_id
      - user_id
    properties:
      trip_id:
        type: integer
        format: int32
        example: 1
      user_id:
        type: integer
        format: int32
        example: 1

  ErrorAPIResponse:
    type: object
    properties:
      status:
        type: string
      error:
        type: string

  AuthAPIResponse:
    type: object
    properties:
      status:
        type: string
      data:
        type: object
        properties:
          token:
            type: string
          first_name:
            type: string
          last_name:
            type: string
          email:
            type: string
            format: email

  BookingAPIResponse:
    type: object
    properties:
      status:
        type: string
      data:
        type: object
        properties:
          booking_id:
            type: integer
            format: int32
          bus_license_number:
            type: string
          trip_date:
            type: string
            format: date
          first_name:
            type: string
          last_name:
            type: string
          user_email:
            type: string
            format: email

  BookingDeleteAPIResponse:
    type: object
    properties:
      status:
        type: string
      error:
        type: string

  TripAPIResponse:
    type: object
    properties:
      status:
        type: string
      data:
        type: object
        properties:
          booking_id:
            type: integer
            format: int32
          bus_license_number:
            type: string
          trip_date:
            type: string
            format: date
          first_name:
            type: string
          last_name:
            type: string
          user_email:
            type: string
            format: email

  TripUpdateAPIResponse:
    type: object
    properties:
      status:
        type: string
      error:
        type: string
securityDefinitions:
  Bearer:
    description: |
      For accessing the API a valid JWT token must be passed in all the queries in
      the 'Authorization' header.


      A valid JWT token is generated by the API and returned as answer of a call
      to the route /auth/login giving a valid user & password.


      The following syntax must be used in the 'Authorization' header :

          Bearer: xxxxxx.yyyyyyy.zzzzzz

    name: Authorization
    in: header
    required: true
    type: apiKey

paths:
  /auth/signup:
    post:
      tags:
        - Authentication
      description: Register a new user
      summary: User can sign up
      operationId: signupUser
      produces:
        - application/json
      parameters:
        - name: register_body
          in: body
          description: User create object
          required: true
          schema:
            $ref: "#/definitions/UserRegisterBody"
      responses:
        '201':
          description: User got created
          schema:
            $ref: "#/definitions/AuthAPIResponse"
        '500':
          description: An internal server error occurs
          schema:
            $ref: "#/definitions/ErrorAPIResponse"
        '409':
          description: Indentical user exists
          schema:
            $ref: "#/definitions/ErrorAPIResponse"

  /auth/signin:
    post:
      tags:
        - Authentication
      description: Log a user in
      summary: User can sign in
      operationId: signinUser
      produces:
        - application/json
      parameters:
        - name: login_body
          in: body
          description: The email/password
          required: true
          schema:
            $ref: "#/definitions/UserLoginBody"
      responses:
        '302':
          description: User got created
          schema:
            $ref: "#/definitions/AuthAPIResponse"
        '401':
          description: User is not authorized the access
          schema:
            $ref: "#/definitions/ErrorAPIResponse"
        '404':
          description: No user with the prided credentials exists
          schema:
            $ref: "#/definitions/ErrorAPIResponse"

  /trips:
    post:
      tags:
        - Trips
      security:
        - Bearer: []
      description: Creates a new trip
      summary: Admin can create a trip
      operationId: createTip
      produces:
        - application/json
      parameters:
        - name: tripCreateObject
          in: body
          description: Trip create object
          required: true
          schema:
            $ref: "#/definitions/TripBody"
      responses:
        '201':
          description: Trip got created
          schema:
            $ref: "#/definitions/TripAPIResponse"
        '500':
          description: An internal server error occurs
          schema:
            $ref: "#/definitions/ErrorAPIResponse"
        '409':
          description: Indentical trip exists
          schema:
            $ref: "#/definitions/ErrorAPIResponse"
        '403':
          description: Doesn't have enought permission to resources
          schema:
            $ref: "#/definitions/ErrorAPIResponse"
    get:
      tags:
        - Trips
      security:
        - Bearer: []
      description: Fetch all trips
      summary: Both Admin and Users can see all trips
      operationId: showTrips
      produces:
        - application/json
      responses:
        '200':
          description: Returns all trips
          schema:
            type: array
            items:
              $ref: "#/definitions/TripAPIResponse"
        '404':
          description: Fails to find any trip
          schema:
            $ref: "#/definitions/ErrorAPIResponse"
        '403':
          description: Doesn't have enought permission to resources
          schema:
            $ref: "#/definitions/ErrorAPIResponse"
  /trips/{tripId}/cancel:
    patch:
      tags:
        - Trips
      security:
        - Bearer: []
      description: Cancel a specied trip
      summary: Admin can cancel a trip
      operationId: cancelTrip
      produces:
        - application/json
      parameters:
        - name: tripId
          in: path
          required: true
          description: The id of the trip to be cancelled
          schema:
            type: integer
          format: int32
          example: 1
          minimum: 1
      responses:
        '204':
          description: Trip with specific id got cancelled
          schema:
            $ref: "#/definitions/TripUpdateAPIResponse"
        '500':
          description: An internal server error occurs
          schema:
            $ref: "#/definitions/ErrorAPIResponse"
        '404':
          description: No trip with the specified id exists
          schema:
            $ref: "#/definitions/ErrorAPIResponse"
        '403':
          description: Doesn't have enought permission to resources
          schema:
            $ref: "#/definitions/ErrorAPIResponse"
